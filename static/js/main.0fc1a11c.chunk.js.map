{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","services/pixabay.js","App.js","index.js"],"names":["Searchbar","state","searchValue","handleSearchSubmit","e","preventDefault","trim","props","onSubmit","setState","toast","warn","handleSearchChange","target","value","toLowerCase","className","this","type","name","autocomplete","autofocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","tags","largeImageURL","src","alt","Button","onClick","newPixabayFetch","_searchQuery","_page","perPage","fetch","page","axios","get","then","result","data","hits","catch","err","console","log","ImageGallery","searchResult","error","status","onLoadMore","searchPhotos","prevState","ScrollImages","window","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","resetPage","searchQuery","length","map","App","getFormSubmitValue","position","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0fc1a11c.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { toast } from 'react-toastify';\n\nexport class Searchbar extends Component {\n  state = {\n    searchValue: \"\",\n  };\n\n  handleSearchSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.searchValue.trim() === '') {\n      toast.warn('Enter correct name!');\n      return;\n    }\n    this.props.onSubmit(this.state.searchValue);\n    this.setState({ searchValue: \"\" });\n  };\n\n  handleSearchChange = (e) => {\n    this.setState({ searchValue: e.target.value.toLowerCase() });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSearchSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            name=\"value\"\n            value={this.state.searchValue}\n            autocomplete=\"off\"\n            autofocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleSearchChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","export function ImageGalleryItem({ id, webformatURL, tags, largeImageURL }) {\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-img={largeImageURL}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n}\n","export function Button({ onClick }) {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n","import { Component } from \"react\";\nimport { PixabayFetch } from \"../../services/pixabay\";\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { Button } from \"../Button/Button\";\n\n\nconst newPixabayFetch = new PixabayFetch();\n\nexport class ImageGallery extends Component {\n  state = {\n    searchResult: [],\n    error: null,\n    status: 'idle',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.value !== this.props.value) {\n      newPixabayFetch.resetPage();\n      this.setState({ status: 'pending' })\n      newPixabayFetch.searchQuery = this.props.value;\n      newPixabayFetch.searchPhotos()\n        .then((searchResult) => {\n          this.setState({ searchResult, status: 'resolved' })\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    } \n  }\n\n  onLoadMore = () => {\n    newPixabayFetch.page = 1;\n    this.setState({ status: 'pending' })\n    newPixabayFetch.searchPhotos()\n      .then((searchResult) => {\n        this.setState((prevState) => ({\n          searchResult: [...prevState.searchResult, ...searchResult], status: 'resolved'\n        }));\n      })\n      .then(this.ScrollImages)\n      .catch(error => this.setState({ error, status: 'rejected' }));\n  };\n\n  ScrollImages = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  render() {\n\n    if (this.state.status === 'pending') {\n        return <div>loading...</div>;\n    }\n\n    if (this.state.status === 'rejected') {\n      return <h1>Error</h1>;\n    }\n    \n    if (this.state.status === 'resolved') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {this.state.searchResult.length > 0 &&\n              this.state.searchResult.map(\n                ({ id, webformatURL, tags, largeImageURL }) => (\n                  <ImageGalleryItem\n                    key={id}\n                    id={id}\n                    webformatURL={webformatURL}\n                    tags={tags}\n                    largeImageURL={largeImageURL}\n                  />\n                )\n              )}\n          </ul>\n          {this.state.searchResult.length >= 12 && (\n            <Button onClick={this.onLoadMore} />\n          )}\n        </>\n      )\n    }\n    \n  }\n}\n","import axios from \"axios\";\n\nexport class PixabayFetch {\n  constructor() {\n    this._searchQuery = \"\";\n    this._page = 1;\n    this.perPage = 12;\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get page() {\n    return this._page;\n  }\n  set page(value) {\n    return (this._page += value);\n  }\n\n  resetPage() {\n    return (this._page = 1);\n  }\n\n  searchPhotos() {\n    const url = \"https://pixabay.com/api/\";\n    const apiKey = \"23141272-55f7853bfecadbbcd9800c5ad\";\n    const params = `?key=${apiKey}&q=${this._searchQuery}&page=${this.page}&image_type=photo&orientation=horizontal&per_page=${this.perPage}`;\n    const fetch = url + params;\n    return axios\n      .get(fetch)\n      .then((result) => {\n        // console.log(result);\n        return result.data;\n      })\n      .then((data) => {\n        // console.log(data.hits);\n        return data.hits;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { Searchbar } from \"./components/Searchbar/Searchbar\";\nimport { ImageGallery } from \"./components/ImageGallery/ImageGallery\";\nimport { ToastContainer } from 'react-toastify';\nimport  '../node_modules/react-toastify/dist/ReactToastify.css' ;\n\nclass App extends Component {\n  state = {\n    value: \"\",\n  };\n\n  getFormSubmitValue = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.getFormSubmitValue} />\n        <ImageGallery value={this.state.value} />\n        <ToastContainer\n          position=\"top-left\"\n          autoClose={2000} />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}